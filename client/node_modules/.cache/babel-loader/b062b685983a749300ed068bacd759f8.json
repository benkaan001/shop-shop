{"ast":null,"code":"var _jsxFileName = \"/Users/ben/Desktop/shop-shop/client/src/components/ProductItem/index.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CART_QUANTITY, ADD_TO_CART } from '../../utils/actions';\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n  const {\n    cart\n  } = state;\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find(cartItem => cartItem._id === _id); //if there was a match, call UPDATE with a new purhcase quantity\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item,\n          purchaseQuantity: 1\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card px-1 py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/products/${_id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: name,\n    src: `/images/${image}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, quantity, \" \", pluralize('item', quantity), \" in stock\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"$\", price)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Add to cart\"));\n}\n\nexport default ProductItem;","map":{"version":3,"sources":["/Users/ben/Desktop/shop-shop/client/src/components/ProductItem/index.js"],"names":["React","Link","pluralize","useStoreContext","UPDATE_CART_QUANTITY","ADD_TO_CART","ProductItem","item","state","dispatch","cart","image","name","_id","price","quantity","addToCart","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,oBAAT,EAA+BC,WAA/B,QAAkD,qBAAlD;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,eAAe,EAAzC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWF,KAAjB;AAEA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,GAAf;AAAoBC,IAAAA,KAApB;AAA2BC,IAAAA;AAA3B,MAAwCR,IAA9C;;AAEA,QAAMS,SAAS,GAAG,MAAM;AACtB;AACA,UAAMC,UAAU,GAAGP,IAAI,CAACQ,IAAL,CAAWC,QAAD,IAAcA,QAAQ,CAACN,GAAT,KAAiBA,GAAzC,CAAnB,CAFsB,CAItB;;AACA,QAAII,UAAJ,EAAgB;AACdR,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEhB,oBADC;AAEPS,QAAAA,GAAG,EAAEA,GAFE;AAGPQ,QAAAA,gBAAgB,EAAEC,QAAQ,CAACL,UAAU,CAACI,gBAAZ,CAAR,GAAwC;AAHnD,OAAD,CAAR;AAKD,KAND,MAMO;AACLZ,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAEf,WADC;AAEPkB,QAAAA,OAAO,EAAE,EAAE,GAAGhB,IAAL;AAAWc,UAAAA,gBAAgB,EAAE;AAA7B;AAFF,OAAD,CAAR;AAID;AACF,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYR,GAAI,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,IAAV;AAAgB,IAAA,GAAG,EAAG,WAAUD,KAAM,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QADH,OACcb,SAAS,CAAC,MAAD,EAASa,QAAT,CADvB,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQD,KAAR,CAJF,CALF,eAWE;AAAQ,IAAA,OAAO,EAAEE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF;AAeD;;AAED,eAAeV,WAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { pluralize } from '../../utils/helpers';\n\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CART_QUANTITY, ADD_TO_CART } from '../../utils/actions';\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n  const { cart } = state;\n\n  const { image, name, _id, price, quantity } = item;\n\n  const addToCart = () => {\n    // find the cart item with the matching id\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id);\n\n    //if there was a match, call UPDATE with a new purhcase quantity\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 },\n      });\n    }\n  };\n\n  return (\n    <div className='card px-1 py-1'>\n      <Link to={`/products/${_id}`}>\n        <img alt={name} src={`/images/${image}`} />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>\n          {quantity} {pluralize('item', quantity)} in stock\n        </div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}